@use "./variables.scss" as *;
@use "./syntax.scss";
@use "./base.scss";


// side bar
.sidebar.left {
  display: flex;
  flex-direction: column;

}
#explorer-content ul{
  font-size: .8rem;
}

#explorer-content li{
  font-size: .7rem;
}





.page {
  max-width: calc(#{map-get($breakpoints, desktop)} + 2000px);
  margin: 0 auto;
  & article {
    & > h1 {
      font-size: 2rem;
    }

    & li:has(> input[type="checkbox"]) {
      list-style-type: none;
      padding-left: 0;
    }

    & li:has(> input[type="checkbox"]:checked) {
      text-decoration: line-through;
      text-decoration-color: var(--gray);
      color: var(--gray);
    }

    & li > * {
      margin-top: 0;
      margin-bottom: 0;
    }

    p > strong {
      color: var(--dark);
    }
  }

  & > #quartz-body {
    display: grid;
    grid-template-columns: #{map-get($desktopGrid, templateColumns)};
    grid-template-rows: #{map-get($desktopGrid, templateRows)};
    column-gap: #{map-get($desktopGrid, columnGap)};
    row-gap: #{map-get($desktopGrid, rowGap)};
    grid-template-areas: #{map-get($desktopGrid, templateAreas)};
    @media all and ($tablet) {
      grid-template-columns: #{map-get($tabletGrid, templateColumns)};
      grid-template-rows: #{map-get($tabletGrid, templateRows)};
      column-gap: #{map-get($tabletGrid, columnGap)};
      row-gap: #{map-get($tabletGrid, rowGap)};
      grid-template-areas: #{map-get($tabletGrid, templateAreas)};
    }
    @media all and ($mobile) {
      grid-template-columns: #{map-get($mobileGrid, templateColumns)};
      grid-template-rows: #{map-get($mobileGrid, templateRows)};
      column-gap: #{map-get($mobileGrid, columnGap)};
      row-gap: #{map-get($mobileGrid, rowGap)};
      grid-template-areas: #{map-get($mobileGrid, templateAreas)};
    }

    @media all and ($desktop) {
      //padding: 0 1rem;
    }
    @media all and ($mobile) {
      margin: 0 auto;
    }

    & .sidebar {
      //gap: 2rem;
      top: 0;
      box-sizing: border-box;
      padding: $topSpacing 2rem 2rem 0.8rem;
      display: flex;
      height: 100vh;
      position: sticky;
    }

    & .sidebar.left {
      z-index: 1;
      margin-left: 0;
      grid-area: grid-sidebar-left;
      flex-direction: column;
      @media all and ($mobile) {
        gap: 0;
        //align-items: center;
        position: initial;
        display: flex;
        height: unset;
        flex-direction: row;
        padding: 2rem 1rem 1rem;
      }
    }

    & .sidebar.right {
      grid-area: grid-sidebar-right;
      margin-right: 0;
      flex-direction: column;
      @media all and ($mobile) {
        margin-left: inherit;
        margin-right: inherit;
      }
      @media all and ($desktop) {
        position: initial;
        height: unset;
        width: 100%;
        flex-direction: row;
        padding: 0;
        & > * {
          flex: 1;
        }
        & > .toc {
          display: none;
        }
      }
    }
    & .page-header,
    & .page-footer {
      margin-top: 1rem;
    }

    & .page-header {
      grid-area: grid-header;
      margin: $topSpacing 0 0 0;
      @media all and ($mobile) {
        margin-top: 0;
        padding: 0;
      }
    }

    & .center > article {
      margin-top: 2rem;
      grid-area: grid-center;
    }

    & footer {
      grid-area: grid-footer;
    }

    & .center,
    & footer {
      margin-top: 5rem;
      max-width: 100%;
      min-width: 100%;
      margin-left: auto;
      margin-right: auto;
      @media all and ($tablet) {
        margin-right: 0;
      }
      @media all and ($mobile) {
        margin-right: 0;
        margin-left: 0;
      }
    }
    & footer {
      margin-left: 0;
    }
  }
}



// Search


.search {
  min-width: fit-content;
  max-width: 8rem;
  @media all and ($mobile) {
    flex-grow: 0.3;
  }

  & > .search-button {
    background-color: var(--lightgray);
    border: none;
    border-radius: 4px;
    font-family: inherit;
    font-size: inherit;
    height: 2rem;
    padding: 0;
    display: flex;
    align-items: center;
    text-align: inherit;
    cursor: pointer;
    white-space: nowrap;
    width: 100%;
    //justify-content: space-between;

    & > p {
      display: inline;
      padding: 0 1rem;
    }

    & svg {
      cursor: pointer;
      width: 18px;
      min-width: 18px;
      margin: 0 0.5rem;

      .search-path {
        stroke: var(--darkgray);
        stroke-width: 2px;
        transition: stroke 0.5s ease;
      }
    }
  }
}